/** * @module Twillio/Applications * @author alexandre.morgaut@gmail.com * @doc http://www.twilio.com/docs/api/rest/applications **/var	SERVICE_NAME,	restClient;SERVICE_NAME = 'Applications';restClient = require('wakanda-twilio/core/rest');/** * @method get * @param {string} appSid * @return {Object} **/exports.get = function Twillio_Application_get(appSid) {	appSid = appSid || "";	return restClient.sendRequest('GET', SERVICE_NAME + '/' + appSid);};/** * @method create * @param {string} friendlyName A human readable description of the new application. Maximum 64 characters. * @param {Object} [options] * @return {Object} **/exports.create = function Twillio_Application_create(friendlyName, options) {	var		params;	params = {};	options = options || {};	options.friendlyName = friendlyName;	restClient.applyOptions(		params,		options,		[			/*			Requests to this application's URLs will start a new TwiML session with this API version. 			Either 2010-04-01 or 2008-08-01. Defaults to your account's default API version.			*/			'ApiVersion', 			/*			The URL that Twilio should request when somebody dials a phone number assigned to this application.			*/			'VoiceUrl',			/*			The HTTP method that should be used to request the VoiceUrl. 			Must be either GET or POST. Defaults to POST.			*/			'VoiceMethod',			/*			A URL that Twilio will request if an error occurs requesting or executing the TwiML at Url.			*/			'VoiceFallbackUrl',			/*			The HTTP method that should be used to request the VoiceFallbackUrl. 			Either GET or POST. Defaults to POST.			*/			'VoiceFallbackMethod',			/*			The URL that Twilio will request to pass status parameters (such as call ended) to your application.			*/			'StatusCallback',			/*			The HTTP method Twilio will use to make requests to the StatusCallback URL. 			Either GET or POST. Defaults to POST.			*/			'StatusCallbackMethod',			/*			Do a lookup of a caller's name from the CNAM database and post it to your app. 			Either true or false. Defaults to false.			*/			'VoiceCallerIdLookup', 			/*			The URL that Twilio should request when somebody sends an SMS to a phone number assigned to this application.			*/			'SmsUrl',			/*			The HTTP method that should be used to request the SmsUrl. 			Must be either GET or POST. Defaults to POST.			*/			'SmsMethod',			/*			A URL that Twilio will request if an error occurs requesting or executing the TwiML by SmsUrl.			*/			'SmsFallbackUrl',			/*			The HTTP method that should be used to request the SmsFallbackUrl. 			Either GET or POST. Defaults to POST.			*/			'SmsFallbackMethod',			/*			Twilio will make a POST request to this URL to pass status parameters (such as sent or failed) to your application			if you specify this application's Sid as the ApplicationSid on an outgoing SMS request.			*/			'SmsStatusCallback',			/*			The HTTP method Twilio will use to make requests to the SmsStatusCallback URL.			Either GET or POST. Defaults to POST.			*/			'SmsStatusCallbackMethod'		]	);	return restClient.sendRequest('POST', SERVICE_NAME, params);};/** * @method update * @param {string} appSid * @param {Object} [options] * @return {Object} **/exports.update = function Twillio_Application_update(appSid, options) {	var		params,		accountSid;	params = {};	options = options || {};	restClient.applyOptions(		params,		options,		[			/*			A human readable description of the new application. Maximum 64 characters.			*/			'FriendlyName',			'Status'		]	);	return restClient.sendRequest('POST', SERVICE_NAME + '/' + appSid, params);};/** * @method getList * @param {Object} [options] * @return {Object} **/exports.getList = function twillio_Application_getList(options) {	var		params;	params = {};	options = options || {};	restClient.applyOptions(		params,		options,		[			/*			Only return the Application resources with friendly names that exactly match this name.			*/			'FriendlyName'		]	);	restClient.applyPaging(params, options);	return restClient.sendRequest('GET', SERVICE_NAME, params);};