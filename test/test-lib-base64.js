var	assert,	base64;assert = require('assert');base64= require('wakanda-twilio/lib/base64');exports['test base64.encode(input)'] = function Twilio_Test_base64_encode() {	var encodedStr = base64.encode('wakanda-twilio/lib/base64');    assert.strictEqual(encodedStr, 'd2FrYW5kYS10d2lsaW8vbGliL2Jhc2U2NA==', 'input correctly base64 encoded');};exports['test base64.decode(input)'] = function Twilio_Test_base64_decode() {	var decodedStr = base64.decode('d2FrYW5kYS10d2lsaW8vbGliL2Jhc2U2NA==');    assert.strictEqual(decodedStr, 'wakanda-twilio/lib/base64', 'input correctly base64 decoded');};exports['test base64.implementPolyfil()'] = function Twilio_Test_base64_implementPolyfil() {	base64.implementPolyfil();    assert.strictEqual(typeof btoa, 'function', 'btoa exists and is a function');    assert.strictEqual(typeof atob, 'function', 'atob exists and is a function');	var encodedStr = btoa('wakanda-twilio/lib/base64');    assert.strictEqual(encodedStr, 'd2FrYW5kYS10d2lsaW8vbGliL2Jhc2U2NA==', 'input correctly base64 encoded using btoa()');	var decodedStr = atob('d2FrYW5kYS10d2lsaW8vbGliL2Jhc2U2NA==');    assert.strictEqual(decodedStr, 'wakanda-twilio/lib/base64', 'input correctly base64 decoded using atob()');};