var	assert,	accountSvc;assert = require('assert');TwilioScript = require('wakanda-twilio/core/twiml').TwilioScript;exports['test response'] = function Twilio_Test_Twiml_response() {    var script = new TwilioScript();    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'simple response ok');};exports['test say()'] = function Twilio_Test_Twiml_say() {	var text = 'hello world';    var script = new TwilioScript();    script.say(text);    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Say>' + text + '</Say>\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'say response ok');};exports['test play(uri, loop)'] = function Twilio_Test_Twiml_play() {	var uri = 'https://api.twilio.com/cowbell.mp3';	var loop = 5;    var script = new TwilioScript();    script.play(uri, loop);    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Play loop="5">' + uri + '</Play>\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'play response ok');};exports['test gather(moduleCallback, options)'] = function Twilio_Test_Twiml_gather() {	var moduleCallback = 'foo.bar'	var text = 'hello Caller';    var script = new TwilioScript();    script.gather(moduleCallback, {numDigits: 5});    script.say(text);    script.endGather();    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Gather numDigits="5">\n';    twiml += '<Say>' + text + '</Say>\n';    twiml += '</Gather>\n'    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'gather response ok');};exports['test record(moduleCallback, options)'] = function Twilio_Test_Twiml_record() {	var moduleCallback = 'foo.bar'	var action = 'http://foo.com/path/to/redirect';	var maxLength = 20;    var script = new TwilioScript();    script.record(moduleCallback, {action: action, maxLength: 20});    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Record action="' + action + '" maxLength="20" />\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'record response ok');};exports['test sendSMS(message, options)'] = function Twilio_Test_Twiml_sendSMS() {	var message = 'Hello World'	var from = '+14152223333';	var to = '+14150001111';    var script = new TwilioScript();    script.sendSMS(message, {to: to, from: from}); // warning! no guaranty on attribute order in the XML    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Sms to="+14150001111" from="+14152223333">' + message + '</Sms>\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'sms response ok');};exports['test dial(to, options)'] = function Twilio_Test_Twiml_dial() {	var to = '+14150001111'	var callerId = '+14152223333';    var script = new TwilioScript();    script.dial(to, {callerId: callerId});    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Dial callerId="' + callerId + '">' + to + '\n</Dial>\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'dial response ok');};exports['test dialNumber(to, options)'] = function Twilio_Test_Twiml_number() {	var to = '+14150001111'	var callerId = '+14152223333';    var script = new TwilioScript();    script.dialNumber(to, {callerId: callerId, sendDigits: 2});    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Dial callerId="' + callerId + '">\n';    twiml += '<Number sendDigits="2">' + to + '</Number>\n';    twiml += '</Dial>\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'dialNumber response ok');};exports['test dialClient(id, options)'] = function Twilio_Test_Twiml_client() {	var id = 'client-id'	var callerId = '+14152223333';    var script = new TwilioScript();    script.dialClient(id, {callerId: callerId});    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Dial callerId="' + callerId + '">\n';    twiml += '<Client>' + id + '</Client>\n';    twiml += '</Dial>\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'dialClient response ok');};/** OTHER DIAL TESTS TO COME **/exports['test hangup()'] = function Twilio_Test_Twiml_hangup() {    var script = new TwilioScript();    script.hangup();    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Hangup />\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'hangup response ok');};exports['test pause()'] = function Twilio_Test_Twiml_hangup() {    var script = new TwilioScript();    script.pause();    var twiml = '<?xml version="1.0" encoding="UTF-8"?>\n';    twiml += '<Response>\n';    twiml += '<Pause />\n';    twiml += '</Response>'    assert.strictEqual(script.toString(), twiml, 'pause response ok');};/** OTHER SECONDARY VERB TESTS TO COME **/