/*global File, module*//*jslint indent: 4 */var    RESOURCES_BASE_PATH,    PART_TYPE_SERVICE_NAME,    PART_TYPE_SID,    ACCOUNTS,    LIST,    INSTANCE,    SERVICES;function requestHandler(request, response) {	"use strict";    var        uriParts,        part,        partType,        serviceModel,        resourceFileName,        suffix;	function parseSubresource() {        serviceModel = serviceModel.subresources[part];		if (serviceModel.mockFilePrefix) {			if (serviceModel.mockFilePrefix[0] !== '_') {				resourceFileName = serviceModel.mockFilePrefix;			} else {				resourceFileName += serviceModel.mockFilePrefix;			}		}		return resourceFileName;	}    resourceFileName = 'versions';    serviceModel = SERVICES;    uriParts = request.path.split('/');    partType = PART_TYPE_SID;    part = uriParts.shift();    while (uriParts.length) {        if (partType === PART_TYPE_SERVICE_NAME) {            switch (part) {            case 'Usage':            case 'SMS':                // Namespaces                serviceModel = serviceModel.subresources[part];                break;            default:                parseSubresource(serviceModel, resourceFileName);                partType = PART_TYPE_SID;            }        } else {            partType = PART_TYPE_SERVICE_NAME;        }        part = uriParts.shift();    }    part = part.split('.json')[0];    if (partType === PART_TYPE_SERVICE_NAME) {        parseSubresource(serviceModel, resourceFileName);        suffix = (part === 'SandBox') ? INSTANCE : LIST; // SandBox is a single Instance    } else if (partType === PART_TYPE_SID) {        suffix = INSTANCE;    } else {        suffix = serviceModel.mockFilePrefix;    }    resourceFileName += suffix;    //serviceParams = getURLQuery('http://foo.com/?' + ((request.method === 'POST' || request.method === 'PUT') ? request.body : request.urlQuery));    response.contentType = 'application/json';    return new File(RESOURCES_BASE_PATH + resourceFileName + '.json');}RESOURCES_BASE_PATH = (new File(module.id + '.js').parent.path) + 'resources/';PART_TYPE_SERVICE_NAME = 0;PART_TYPE_SID = 1;ACCOUNTS = 'Accounts';LIST = '_list';INSTANCE = '_instance';SERVICES = {subresources: {    Accounts: {        sid: true,        sidPrefix: 'AC',        pagging: true,        mockFilePrefix: "accounts",        subresources: {            AvailablePhoneNumbers: {                sid: true, // ISO Country code (ISO 3166-1 alpha-2 format)                pagging: true,                mockFilePrefix: "available_phone_numbers",                subresources: {                    Local: {                        mockFilePrefix: '_local'                    },                    TollFree: {                        mockFilePrefix: '_tollfree'                    }                }            },            Calls: {                sid: true,                sidPrefix: 'CA',                pagging: true,                mockFilePrefix: "calls",                subresources: {                    Notifications: {                        sid: true,                        sidPrefix: 'NO',                        paging: true,                        mockFilePrefix: "notifications"                    },                    Recordings: {                        sid: true,                        sidPrefix: 'RE',                        paging: true,                        mockFilePrefix: "recordings"                    }                }            },            Conferences: {                sid: true,                sidPrefix: 'CF',                pagging: true,                mockFilePrefix: "conferences",                subresources: {                    Participants: {                        sid: true,                        sidPrefix: 'CA',                        paging: true,                        mockFilePrefix: "participants"                    }                }            },            IncomingPhoneNumbers: {                sid: true,                sidPrefix: 'PN',                pagging: true,                mockFilePrefix: "incoming_phone_numbers"            },            Notifications: {                sid: true,                sidPrefix: 'NO',                pagging: true,                mockFilePrefix: "notifications"            },            OutgoingCallerIds: {                sid: true,                sidPrefix: 'PN',                pagging: true,                mockFilePrefix: "outgoing_caller_ids"            },            Queues: {                sid: true,                sidPrefix: 'QU',                pagging: true,                mockFilePrefix: "queues",                subresources: {                    Members: {                        sid: true,                        sidPrefix: 'CA',                        paging: true,                        mockFilePrefix: "members"                    }                }            },            Recordings: {                sid: true,                sidPrefix: 'RE',                paging: true,                mockFilePrefix: "recordings",                subresources: {                    Transcriptions: {                        sid: true,                        sidPrefix: 'TR',                        paging: true,                        mockFilePrefix: "transcriptions"                    }                }            },            SandBox: {                mockFilePrefix: "sandbox"            },            SMS: {subresources: {            	Messages: {					sid: true,					sidPrefix: 'SM',					paging: true,					mockFilePrefix: "sms_messages"				}            }},            Transcriptions: {                sid: true,                sidPrefix: 'TR',                paging: true,                mockFilePrefix: "transcriptions"            },            Usage: {subresources: {				Records: {					paging: true,					mockFilePrefix: "usage_records",					subresources: {						Daily: {},						Monthly: {},						Yearly: {},						AllTime: {},						Today: {},						Yesterday: {},						ThisMonth: {},						LastMonth: {}					}				},				Triggers: {					sid: true,					sidPrefix: 'UT',					paging: true,					mockFilePrefix: "usage_triggers"				}            }}        }    }}};