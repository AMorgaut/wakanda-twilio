self.onmessage = function onListenerWorkerMessage(message) {	var		data,		moduleId,		moduleIdParts,		methodName,		mod,		result;	data = message.data;		// Parse listenerPath for moduleId and methodName	moduleId = data.listenerPath; // "modulePath/parts.methodName"	moduleIdParts = moduleId.split('/'); // ["modulePath", "parts.methodName"]	methodName = moduleIdParts.pop(); // "parts.methodName" & ["modulePath"]	methodName = methodName.split('.'); // ["parts", "methodName"]	moduleIdParts.push(methodName[0]); // ["modulePath", "parts"]	moduleId = moduleIdParts.join('/'); // "modulePath/parts"	methodName = methodName[1]; // "methodName"		try {		mod = require(moduleId);	} catch (error) {		console.error('error', error, 'while loading the listener module:', data.listenerPath);		result = {			status: 500, 			body: 'error while loading the listener module'		};	}	if (mod) {		if (typeof mod[methodName] !== 'function') {			console.error('listener', data.listenerPath, 'is not a function');			result = {				status: 500, 				body: 'listener method not found or not valid'			};		} else {			result = mod[methodName](data);		}	}	self.postMessage(result);	self.close();};