/** * @module Twillio/IncomingNumber * @author alexandre.morgaut@gmail.com **/var	SERVICE_NAME,	restClient;restClient = require('./core/rest');SERVICE_NAME = 'IncomingPhoneNumbers';/** * @method create * @param {string} phoneNumber The phone number you want to purchase. The number should be formatted starting with a '+' followed by the country code and the number in E.164 format. You must include either this or the AreaCode parameter to have your POST succeed. * @param {string} areaCode The area code in which you'd like a new incoming phone number. Any three digit, US area code is valid. Twilio will provision a random phone number within this area code for you. You must include either this or the PhoneNumber parameter to have your POST succeed. * @param {Object} [options] * @return {Object} **/exports.create = function twillio_IncomingNumber_create(phoneNumber, areaCode, options) {		var		params;	params = {		PhoneNumber: phoneNumber,		AreaCode: areaCode	};	options = options || {};	restClient.applyOptions(		params,		options,		[			/* 			A human readable description of the new incoming phone number resource, with maximum length 64 characters.			*/			'FriendlyName',			/* 			Calls to this phone number will start a new TwiML session with this API version.			*/			'ApiVersion',			/* 			The URL that Twilio should request when somebody dials the phone number.			*/			'VoiceUrl',			/* 			The HTTP method that should be used to request the VoiceUrl. 			Either GET or POST. Defaults to POST.			*/			'VoiceMethod',			/* 			A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by VoiceUrl.			*/			'VoiceFallbackUrl',			/* 			The HTTP method that should be used to request the VoiceFallbackUrl.			Either GET or POST. Defaults to POST.			*/			'VoiceFallbackMethod',			/* 			The URL that Twilio will request to pass status parameters (such as call ended) to your application.			*/			'StatusCallback',			/* 			The HTTP method that should be used to request the StatusCallback.			Either GET or POST. Defaults to POST.			*/			'StatusCallbackMethod',			/* 			Do a lookup of a caller's name from the CNAM database and post it to your app.			*/			'VoiceCallerIdLookup',			/* 			The 34 character sid of the application Twilio should use to handle phone calls to this number. 			If a VoiceApplicationSid is present, Twilio will ignore all of the voice urls above and use those set on the application instead.			*/			'VoiceApplicationSid',			/* 			The URL that Twilio should request when somebody sends an SMS to the new phone number.			*/			'SmsUrl',			/* 			The HTTP method that should be used to request the SmsUrl. 			Either GET or POST. Defaults to POST.			*/			'SmsMethod',			/* 			A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by SmsUrl.			*/			'SmsFallbackUrl',			/* 			The HTTP method that should be used to request the SmsFallbackUrl.			Either GET or POST. Defaults to POST.			*/			'SmsFallbackMethod',			/* 			The 34 character sid of the application Twilio should use to handle SMSs sent to this number. 			If a SmsApplicationSid is present, Twilio will ignore all of the SMS urls above and use those set on the application instead.			*/			'SmsApplicationSid'		]	);	return restClient.sendRequest('POST', SERVICE_NAME);};/** * @method get * @param {String} IncomingPhoneNumberSid * @return {Object} **/exports.get = function twillio_IncomingNumber_get(IncomingPhoneNumberSid) {	return restClient.sendRequest(		'GET',		SERVICE_NAME + '/' + IncomingPhoneNumberSid	);};/** * @method update * @param {string} IncomingPhoneNumberSid A 34 character string that uniquely identifies this resource. * @param {Object} [options] * @return {Object} **/exports.update = function twillio_IncomingNumber_update(IncomingPhoneNumberSid) {		var		params;	params = {};	options = options || {};	restClient.applyOptions(		params,		options,		[			/* 			A human readable description of the new incoming phone number resource, with maximum length 64 characters.			*/			'FriendlyName',			/* 			Calls to this phone number will start a new TwiML session with this API version.			*/			'ApiVersion',			/* 			The URL that Twilio should request when somebody dials the phone number.			*/			'VoiceUrl',			/* 			The HTTP method that should be used to request the VoiceUrl. 			Either GET or POST. Defaults to POST.			*/			'VoiceMethod',			/* 			A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by VoiceUrl.			*/			'VoiceFallbackUrl',			/* 			The HTTP method that should be used to request the VoiceFallbackUrl.			Either GET or POST. Defaults to POST.			*/			'VoiceFallbackMethod',			/* 			The URL that Twilio will request to pass status parameters (such as call ended) to your application.			*/			'StatusCallback',			/* 			The HTTP method that should be used to request the StatusCallback.			Either GET or POST. Defaults to POST.			*/			'StatusCallbackMethod',			/* 			Do a lookup of a caller's name from the CNAM database and post it to your app.			*/			'VoiceCallerIdLookup',			/* 			The 34 character sid of the application Twilio should use to handle phone calls to this number. 			If a VoiceApplicationSid is present, Twilio will ignore all of the voice urls above and use those set on the application instead.			*/			'VoiceApplicationSid',			/* 			The URL that Twilio should request when somebody sends an SMS to the new phone number.			*/			'SmsUrl',			/* 			The HTTP method that should be used to request the SmsUrl. 			Either GET or POST. Defaults to POST.			*/			'SmsMethod',			/* 			A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by SmsUrl.			*/			'SmsFallbackUrl',			/* 			The HTTP method that should be used to request the SmsFallbackUrl.			Either GET or POST. Defaults to POST.			*/			'SmsFallbackMethod',			/* 			The 34 character sid of the application Twilio should use to handle SMSs sent to this number. 			If a SmsApplicationSid is present, Twilio will ignore all of the SMS urls above and use those set on the application instead.			*/			'SmsApplicationSid'		]	);	return restClient.sendRequest('POST', SERVICE_NAME + '/' + IncomingPhoneNumberSid);};/** * @method remove * @param {String} IncomingPhoneNumberSid * @return {Object} **/exports.remove = function twillio_IncomingNumber_remove(IncomingPhoneNumberSid) {	return restClient.sendRequest('DELETE', SERVICE_NAME + '/' + IncomingPhoneNumberSid);};/** * @method getList * @param {Object} [options] * @return {Object} **/exports.getList = function twillio_IncomingNumber_getList(options) {	var		params;	params = {};	options = options || {};	restClient.applyOptions(		params,		options,		[			/* 			Only show the incoming phone number resources that match this pattern. 			You can specify partial numbers and use '*' as a wildcard for any digit.			*/			'PhoneNumber',			/* 			Only show the incoming phone number resources with friendly names that exactly match this name.			*/			'FriendlyName'		]	);	restClient.applyPaging(params, options);	return restClient.sendRequest('GET', SERVICE_NAME, params);};